//--------------------------------------
//--- 010 Editor v5.0 Binary Template
//
// File:        CFF.bt
// Author:      Jille
// Revision:    8
// Purpose:     Discover Pro MIB2 cff file parser
// Colorcoding: Red = unknown, Green = known. Dark gray = probable. Light gray = Zlib data.
//--------------------------------------

////////////////////////////////////////////////////////////

LittleEndian();
byte magic[12]  <bgcolor=cSilver>; //
long data_size  <format=decimal,bgcolor=cGreen>;
long data_size2 <format=decimal,bgcolor=cGreen>;
long unknown_0  <format=hex,bgcolor=cRed>;
long toc_size  <format=decimal,bgcolor=cGreen>;
long numfiles<format=hex,bgcolor=cGreen>;

struct
{
    ushort some_id<format=hex,bgcolor=cSilver>;
    byte unknown0;
    byte file_type_or_so;

} toc [toc_size] <optimize=false>;

struct
{
    byte checksum[16]<format=hex,bgcolor=cYellow>;
    long resource_id<format=hex,bgcolor=cYellow>;
    
} ids [numfiles] <optimize=false>;


struct
{
    int pathlength <format=hex,bgcolor=cBlack>;
    int unknown1 <format=hex,bgcolor=cYellow>;
    int unknown3 <format=hex,bgcolor=cSilver>;
    if (unknown1!=8388608){
        int data_size <format=hex,bgcolor=cGreen>;
        int data_size2 <format=hex,bgcolor=cGreen>;
    } else {
        int data_size <format=hex,bgcolor=cGreen>;
    }
    int offset <format=hex,bgcolor=cGreen>;
    char path[pathlength]<format=hex,bgcolor=cGreen>;
} toc2 [numfiles] <optimize=false>;

struct
{
    byte png_data;
} data [1] <optimize=false>;


local int index = 0;
Printf("ID \t offset \t size(B) \t path \n");
Printf("-- \t ------ \t ---- \t ---- \n");
while( index < numfiles )
{
    Printf ("%d \t %x \t %d \t %s \n" , index+1, toc2[index].offset, toc2[index].data_size, toc2[index].path );
    index = index + 1;
}